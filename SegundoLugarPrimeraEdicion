import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.time.Duration;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class Avengers {

  public static void main(String[] args) {

    Avengers.scheduleCollitions(Avengers.getData());
  }

  public static Map<String,String[]> getData() throws Exception{
      Map<String,String[]> totalSchedule = new HashMap<String,String[]>();
      File file=new File("avengersSchedule.txt");
      FileReader fr=new FileReader(file);
      BufferedReader br=new BufferedReader(fr);
      String line;
      while((line = br.readLine())!=null)
      {
        String[] superHero = line.split(" = ");
   
        String[] schedule = superHero[0].split(", ");
        for(String range:schedule){
          String[] result = new String[3];
          String[] hours = range.split("-");
          String start = hours[0];
          String dayOfWeek = start.substring(0,2);
          start = start.substring(2,start.length()).replace(":","");
          String end = hours[1].replace(":","");
          result[0]=dayOfWeek;
          result[1]=start;
          result[2]=end;
          totalSchedule.put(superHero[0],result);
        }
      }
      fr.close();
    return totalSchedule;
  }

  public static void scheduleCollitions(List<List<Object>> values){
    HashMap<String,Integer> collisions = new HashMap<>();
    List<String> names = new ArrayList<>();

    for(int i = 0; i<values.size(); i++){
      String name1 = values.get(i).get(0).toString();
      Integer a = (Integer) values.get(i).get(1);
      Integer c = (Integer) values.get(i).get(2);
      for(int j = i+1; j<values.size();j++){
        String name2 = values.get(j).get(0).toString();
        Integer b = (Integer) values.get(j).get(1);
        Integer d = (Integer) values.get(j).get(2);
        //there is a collision
        if(a <= d && c >= b){
          names.clear();
          names.add(name1);
          names.add(name2);
          String key = names.stream().sorted().collect(Collectors.joining("-"));
          collisions.put(key, collisions.getOrDefault(key,0)+1);
        }
      }
    }

    collisions.forEach((k,v) -> System.out.println(String.format("%s=%d",k,v)));

  }

}
